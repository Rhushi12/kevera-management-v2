<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<title>Kevera - Cutting &amp; Bundling</title>
<link href="https://fonts.googleapis.com" rel="preconnect"/>
<link crossorigin="" href="https://fonts.gstatic.com" rel="preconnect"/>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;family=Manrope:wght@400;500;600;700&amp;display=swap" rel="stylesheet"/>
<link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
<script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
<script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    colors: {
                        primary: '#0F766E',
                        secondary: '#F59E0B',
                        'background-light': '#F9FAFB',
                        'background-dark': '#1F2937',
                        'surface-light': '#FFFFFF',
                        'surface-dark': '#374151',
                        'text-light': '#111827',
                        'text-dark': '#F9FAFB',
                        'subtle-light': '#6B7280',
                        'subtle-dark': '#9CA3AF',
                        'border-light': '#E5E7EB',
                        'border-dark': '#4B5563',
                        danger: '#DC2626',
                    },
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                        display: ['Manrope', 'sans-serif'],
                    },
                    borderRadius: {
                        DEFAULT: '8px',
                        lg: '8px',
                        xl: '8px',
                        full: '9999px',
                    },
                },
            },
        };
    </script>
<style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .material-symbols-outlined {
            font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
        }
        .sticky-bottom-bar {
            box-shadow: 0 -4px 6px -1px rgb(0 0 0 / 0.1), 0 -2px 4px -2px rgb(0 0 0 / 0.1);
            padding-bottom: env(safe-area-inset-bottom);
        }
        .drawer {
            transition: transform 0.3s ease-in-out;
            transform: translateX(100%);
        }
        .drawer.open {
            transform: translateX(0);
        }
        .toast {
            animation: slide-in 0.5s forwards, slide-out 0.5s 2.5s forwards;
        }
        @keyframes slide-in {
            from {
                transform: translateY(-100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
        @keyframes slide-out {
            from {
                transform: translateY(0);
                opacity: 1;
            }
            to {
                transform: translateY(-100%);
                opacity: 0;
            }
        }
        .form-dirty .sticky-bottom-bar {
            display: flex;
        }
    </style>
</head>
<body class="bg-background-light dark:bg-background-dark">
<div class="flex min-h-screen">
<aside class="w-64 flex-shrink-0 bg-surface-light dark:bg-surface-dark border-r border-border-light dark:border-border-dark hidden md:block">
<div class="p-6">
<h1 class="text-2xl font-bold font-display text-text-light dark:text-text-dark">Kevera</h1>
</div>
<nav class="mt-6">
<a class="flex items-center gap-3 px-6 py-3 text-subtle-light dark:text-subtle-dark hover:bg-background-light dark:hover:bg-background-dark" href="#">
<span class="material-symbols-outlined">dashboard</span>
<span>Dashboard</span>
</a>
<a class="flex items-center gap-3 px-6 py-3 text-subtle-light dark:text-subtle-dark hover:bg-background-light dark:hover:bg-background-dark" href="#">
<span class="material-symbols-outlined">move_to_inbox</span>
<span>Intake</span>
</a>
<a class="flex items-center gap-3 px-6 py-3 text-primary bg-primary/10 dark:bg-primary/20 font-semibold" href="#">
<span class="material-symbols-outlined" style="font-variation-settings: 'FILL' 1">factory</span>
<span>Production</span>
</a>
<a class="flex items-center gap-3 px-6 py-3 text-subtle-light dark:text-subtle-dark hover:bg-background-light dark:hover:bg-background-dark" href="#">
<span class="material-symbols-outlined">inventory_2</span>
<span>Inventory</span>
</a>
<a class="flex items-center gap-3 px-6 py-3 text-subtle-light dark:text-subtle-dark hover:bg-background-light dark:hover:bg-background-dark" href="#">
<span class="material-symbols-outlined">bar_chart</span>
<span>Reports</span>
</a>
</nav>
</aside>
<main class="flex-1 overflow-x-hidden">
<div class="sticky top-0 z-20 flex items-center justify-between p-4 bg-surface-light/80 dark:bg-surface-dark/80 backdrop-blur-sm border-b border-border-light dark:border-border-dark md:p-6">
<div>
<div class="text-sm text-subtle-light dark:text-subtle-dark">Production / Cutting</div>
<h2 class="text-2xl font-bold text-text-light dark:text-text-dark">Cutting &amp; Bundling (Step 2)</h2>
</div>
<div class="flex items-center gap-2">
<button class="md:hidden p-2 rounded-full text-subtle-light dark:text-subtle-dark hover:bg-background-light dark:hover:bg-background-dark">
<span class="material-symbols-outlined">menu</span>
</button>
</div>
</div>
<div class="p-4 md:p-6 grid grid-cols-1 lg:grid-cols-3 gap-6 @container">
<div class="lg:col-span-2 flex flex-col gap-6 order-2 lg:order-1">
<form class="bg-surface-light dark:bg-surface-dark p-6 rounded-lg" id="cutting-form">
<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
<div>
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="lot-id">Lot ID <span class="text-danger">*</span></label>
<div class="relative">
<input class="w-full bg-background-light dark:bg-background-dark border-border-light dark:border-border-dark text-text-light dark:text-text-dark rounded-lg p-3 pr-10 focus:ring-primary focus:border-primary" id="lot-id" placeholder="Scan or Enter Lot ID" required="" type="text" value="L-54321-M"/>
<span class="material-symbols-outlined absolute top-1/2 right-3 -translate-y-1/2 text-subtle-light dark:text-subtle-dark cursor-pointer">qr_code_scanner</span>
</div>
<p class="text-xs text-subtle-light dark:text-subtle-dark mt-1">This is the Lot ID from the material intake step.</p>
</div>
<div>
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="style-template">Template/Style</label>
<input class="w-full bg-gray-100 dark:bg-gray-800 border border-border-light dark:border-border-dark text-subtle-light dark:text-text-dark rounded-lg p-3" disabled="" id="style-template" placeholder="Auto-filled from Lot ID" type="text" value="Men's Classic T-Shirt"/>
<p class="text-xs text-subtle-light dark:text-subtle-dark mt-1">Automatically populated when Lot ID is entered.</p>
</div>
<div>
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="size">Size <span class="text-danger">*</span></label>
<select class="w-full bg-background-light dark:bg-background-dark border border-border-light dark:border-border-dark text-text-light dark:text-text-dark rounded-lg p-3 focus:ring-primary focus:border-primary" id="size" required="">
<option>Select Size</option>
<option>XS</option>
<option>S</option>
<option selected="">M</option>
<option>L</option>
<option>XL</option>
<option>XXL</option>
</select>
</div>
<div>
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="target-yield">Target Yield</label>
<input class="w-full bg-background-light dark:bg-background-dark border border-border-light dark:border-border-dark text-text-light dark:text-text-dark rounded-lg p-3 focus:ring-primary focus:border-primary" id="target-yield" min="0" type="number" value="450"/>
<p class="text-xs text-subtle-light dark:text-subtle-dark mt-1">Default value is 450. Must be 0 or greater.</p>
</div>
<div>
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="actual-pieces">Actual Pieces <span class="text-danger">*</span></label>
<input class="w-full bg-background-light dark:bg-background-dark border border-border-light dark:border-border-dark text-text-light dark:text-text-dark rounded-lg p-3 focus:ring-primary focus:border-primary" id="actual-pieces" min="0" placeholder="e.g., 448" required="" type="number" value="448"/>
<p class="text-xs text-danger mt-1 hidden" id="actual-pieces-error">Actual pieces must be 0 or more.</p>
<div class="flex gap-2 mt-2">
<button class="text-xs bg-primary/10 text-primary px-2 py-1 rounded-full hover:bg-primary/20" type="button">Set Actual = 450</button>
<button class="text-xs bg-primary/10 text-primary px-2 py-1 rounded-full hover:bg-primary/20" type="button">Copy Target â†’ Actual</button>
</div>
</div>
<div>
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="cutting-table">Cutting Table ID</label>
<input class="w-full bg-background-light dark:bg-background-dark border border-border-light dark:border-border-dark text-text-light dark:text-text-dark rounded-lg p-3 focus:ring-primary focus:border-primary" id="cutting-table" placeholder="e.g., CT-03" type="text"/>
</div>
<div>
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="operator">Operator</label>
<input class="w-full bg-background-light dark:bg-background-dark border border-border-light dark:border-border-dark text-text-light dark:text-text-dark rounded-lg p-3 focus:ring-primary focus:border-primary" id="operator" placeholder="e.g., Jane Doe" type="text"/>
</div>
<div>
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="timestamp">Timestamp</label>
<input class="w-full bg-gray-100 dark:bg-gray-800 border border-border-light dark:border-border-dark text-subtle-light dark:text-text-dark rounded-lg p-3" id="timestamp" readonly="" type="datetime-local"/>
<p class="text-xs text-subtle-light dark:text-subtle-dark mt-1">Defaults to the current date and time.</p>
</div>
<div class="md:col-span-2">
<label class="block text-sm font-medium text-text-light dark:text-text-dark mb-1" for="notes">Notes</label>
<textarea class="w-full bg-background-light dark:bg-background-dark border border-border-light dark:border-border-dark text-text-light dark:text-text-dark rounded-lg p-3 focus:ring-primary focus:border-primary" id="notes" placeholder="Add any relevant notes here..." rows="3"></textarea>
</div>
</div>
<div class="mt-6 border-t border-border-light dark:border-border-dark pt-6">
<div class="flex items-center">
<input class="h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary" id="split-bundles" type="checkbox"/>
<label class="ml-2 block text-sm font-medium text-gray-900 dark:text-gray-200" for="split-bundles">Split into sub-bundles</label>
</div>
</div>
<div class="mt-6 hidden" id="sub-bundles-section">
<div class="flex flex-wrap justify-between items-center gap-4 mb-4">
<h4 class="font-bold text-text-light dark:text-text-dark">Sub-Bundles</h4>
<div class="flex items-center gap-2">
<label class="text-sm" for="num-sub-bundles"># of sub-bundles</label>
<input class="w-20 bg-background-light dark:bg-surface-dark border-border-light dark:border-border-dark rounded-lg p-2 text-sm focus:ring-primary focus:border-primary" id="num-sub-bundles" min="1" type="number" value="5"/>
<button class="text-sm font-semibold text-primary hover:text-primary/90" type="button">Auto Split</button>
</div>
</div>
<div class="overflow-x-auto rounded-lg border border-border-light dark:border-border-dark">
<table class="w-full text-left">
<thead class="bg-background-light dark:bg-background-dark">
<tr>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark">Sub-bundle ID</th>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark">Size</th>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark">Pieces</th>
</tr>
</thead>
<tbody class="divide-y divide-border-light dark:divide-border-dark" id="sub-bundle-rows">
</tbody>
<tfoot class="bg-background-light dark:bg-background-dark">
<tr>
<td class="p-3 text-sm font-semibold text-right text-text-light dark:text-text-dark" colspan="2">Total Pieces:</td>
<td class="p-3 font-semibold text-text-light dark:text-text-dark" id="sub-bundle-total">0</td>
</tr>
</tfoot>
</table>
</div>
<p class="text-xs text-danger mt-2 hidden" id="sub-bundle-error">Sub-bundle total must equal Actual Pieces to save.</p>
</div>
<div class="flex items-center justify-end gap-3 mt-8">
<button class="font-semibold text-subtle-light dark:text-subtle-dark hover:text-text-light dark:hover:text-text-dark" type="reset">Clear</button>
<button class="bg-secondary text-white font-semibold py-2 px-4 rounded-lg hover:bg-secondary/90 transition-colors flex items-center justify-center gap-2" id="print-btn" type="button">
<span class="material-symbols-outlined">print</span> Print Bundle Labels
                            </button>
<button class="bg-primary text-white font-semibold py-2 px-4 rounded-lg hover:bg-primary/90 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed" disabled="" id="save-btn" type="submit">Save Batch</button>
</div>
</form>
</div>
<div class="lg:col-span-1 space-y-6 order-1 lg:order-2">
<div class="bg-surface-light dark:bg-surface-dark p-6 rounded-lg">
<details class="lg:hidden" id="summary-accordion">
<summary class="font-bold text-lg text-text-light dark:text-text-dark cursor-pointer flex justify-between items-center list-none">
                                Lot Summary
                                <span class="material-symbols-outlined transition-transform">expand_more</span>
</summary>
<div class="mt-4 space-y-4">
</div>
</details>
<div class="hidden lg:block" id="summary-desktop">
<h3 class="font-bold text-lg text-text-light dark:text-text-dark mb-4">Lot Summary</h3>
<div class="space-y-4">
<div>
<p class="text-sm text-subtle-light dark:text-subtle-dark">Lot ID</p>
<p class="font-semibold text-text-light dark:text-text-dark font-mono">L-54321-M</p>
</div>
<div>
<p class="text-sm text-subtle-light dark:text-subtle-dark">Style/Template</p>
<p class="font-semibold text-text-light dark:text-text-dark">Men's Classic T-Shirt</p>
</div>
<div>
<p class="text-sm text-subtle-light dark:text-subtle-dark">Size</p>
<p class="font-semibold text-text-light dark:text-text-dark">M</p>
</div>
<div>
<p class="text-sm text-subtle-light dark:text-subtle-dark">Target Yield</p>
<p class="font-semibold text-text-light dark:text-text-dark">450</p>
</div>
<div>
<p class="text-sm text-subtle-light dark:text-subtle-dark">Actual Pieces</p>
<p class="font-semibold text-primary dark:text-secondary">448</p>
</div>
<div>
<p class="text-sm text-subtle-light dark:text-subtle-dark">Step Status</p>
<p class="font-semibold text-text-light dark:text-text-dark flex items-center gap-2"><span class="w-2 h-2 rounded-full bg-secondary"></span> Cutting</p>
</div>
<div>
<p class="text-sm text-subtle-light dark:text-subtle-dark">Last Update</p>
<p class="font-semibold text-text-light dark:text-text-dark">2023-10-27 10:30 AM</p>
</div>
<a class="text-primary font-semibold text-sm hover:underline" href="#">View Lot Details</a>
</div>
</div>
</div>
</div>
<div class="lg:col-span-3 bg-surface-light dark:bg-surface-dark p-6 rounded-lg order-3">
<div class="flex flex-col md:flex-row justify-between md:items-center gap-4 mb-4">
<h3 class="text-xl font-bold text-text-light dark:text-text-dark">Recent Cutting Batches</h3>
<div class="flex items-center gap-2">
<div class="relative">
<span class="material-symbols-outlined absolute left-3 top-1/2 -translate-y-1/2 text-subtle-light dark:text-subtle-dark">search</span>
<input class="w-full md:w-64 bg-background-light dark:bg-background-dark border border-border-light dark:border-border-dark text-text-light dark:text-text-dark rounded-lg p-2 pl-10 focus:ring-primary focus:border-primary" placeholder="Search batches..." type="text"/>
</div>
<button class="p-2 rounded-lg text-subtle-light dark:text-subtle-dark hover:bg-background-light dark:hover:bg-background-dark border border-border-light dark:border-border-dark flex items-center gap-1">
<span class="material-symbols-outlined text-base">filter_list</span>
<span class="text-sm">Filter</span>
</button>
</div>
</div>
<div class="overflow-x-auto">
<table class="w-full text-left">
<thead class="border-b border-border-light dark:border-border-dark">
<tr>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark cursor-pointer hover:text-text-light">Batch ID <span class="material-symbols-outlined text-base align-middle">unfold_more</span></th>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark cursor-pointer hover:text-text-light">Lot ID <span class="material-symbols-outlined text-base align-middle">unfold_more</span></th>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark cursor-pointer hover:text-text-light">Size <span class="material-symbols-outlined text-base align-middle">unfold_more</span></th>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark">Target Yield</th>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark">Actual Pieces</th>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark">Operator</th>
<th class="p-3 text-sm font-semibold text-subtle-light dark:text-subtle-dark cursor-pointer hover:text-text-light">Timestamp <span class="material-symbols-outlined text-base align-middle">unfold_more</span></th>
</tr>
</thead>
<tbody>
<tr class="border-b border-border-light dark:border-border-dark hover:bg-background-light dark:hover:bg-background-dark cursor-pointer" onclick="openDrawer(this)">
<td class="p-3 text-sm text-primary font-mono">B-98765</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark font-mono">L-54321-M</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">M</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">450</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">448</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">John Doe</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">2024-03-15 09:15</td>
</tr>
<tr class="border-b border-border-light dark:border-border-dark hover:bg-background-light dark:hover:bg-background-dark cursor-pointer" onclick="openDrawer(this)">
<td class="p-3 text-sm text-primary font-mono">B-98764</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark font-mono">L-54320-L</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">L</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">250</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">250</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">Jane Smith</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">2024-03-14 14:30</td>
</tr>
<tr class="border-b border-border-light dark:border-border-dark hover:bg-background-light dark:hover:bg-background-dark cursor-pointer" onclick="openDrawer(this)">
<td class="p-3 text-sm text-primary font-mono">B-98763</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark font-mono">L-54319-S</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">S</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">300</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">295</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">Alex Ray</td>
<td class="p-3 text-sm text-subtle-light dark:text-subtle-dark">2024-03-14 11:00</td>
</tr>
</tbody>
</table>
</div>
<div class="flex items-center justify-between mt-4">
<span class="text-sm text-subtle-light dark:text-subtle-dark">Showing 1 to 3 of 15 results</span>
<div class="flex items-center gap-2">
<button class="p-2 rounded-lg hover:bg-background-light dark:hover:bg-surface-dark disabled:text-gray-400" disabled="">
<span class="material-symbols-outlined">chevron_left</span>
</button>
<button class="p-2 rounded-lg hover:bg-background-light dark:hover:bg-surface-dark">
<span class="material-symbols-outlined">chevron_right</span>
</button>
</div>
</div>
</div>
</div>
</main>
</div>
<div class="sticky bottom-0 bg-surface-light dark:bg-surface-dark border-t border-border-light dark:border-border-dark p-4 gap-3 sticky-bottom-bar hidden lg:hidden">
<button class="flex-1 font-semibold text-subtle-light dark:text-subtle-dark hover:text-text-light dark:hover:text-text-dark" form="cutting-form" type="reset">Clear</button>
<button class="flex-1 bg-primary text-white font-semibold py-3 px-4 rounded-lg hover:bg-primary/90 transition-colors disabled:bg-gray-400 disabled:cursor-not-allowed" disabled="" form="cutting-form" id="save-btn-mobile" type="submit">Save Batch</button>
</div>
<div class="fixed top-5 right-5 z-50 space-y-2" id="toast-container"></div>
<div class="fixed top-0 right-0 z-40 h-screen p-6 overflow-y-auto bg-surface-light dark:bg-surface-dark w-full max-w-md drawer" id="batch-drawer">
<button class="absolute top-4 right-4 text-subtle-light dark:text-subtle-dark hover:bg-background-light dark:hover:bg-background-dark rounded-full p-1" onclick="closeDrawer()">
<span class="material-symbols-outlined">close</span>
</button>
<h3 class="text-xl font-bold text-text-light dark:text-text-dark mb-6">Batch Details (Read-Only)</h3>
<div class="space-y-4" id="drawer-content">
</div>
</div>
<div class="fixed inset-0 bg-black/30 z-30 hidden" id="drawer-overlay" onclick="closeDrawer()"></div>
<script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('cutting-form');
            const saveBtn = document.getElementById('save-btn');
            const saveBtnMobile = document.getElementById('save-btn-mobile');
            const printBtn = document.getElementById('print-btn');
            const splitCheckbox = document.getElementById('split-bundles');
            const subBundlesSection = document.getElementById('sub-bundles-section');
            const drawer = document.getElementById('batch-drawer');
            const drawerOverlay = document.getElementById('drawer-overlay');
            const drawerContent = document.getElementById('drawer-content');
            const timestampInput = document.getElementById('timestamp');
            // Set initial timestamp
            const now = new Date();
            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
            timestampInput.value = now.toISOString().slice(0, 16);
            // Accordion for mobile summary
            const accordion = document.getElementById('summary-accordion');
            const summaryDesktop = document.getElementById('summary-desktop');
            const accordionContent = accordion.querySelector('div');
            accordionContent.innerHTML = summaryDesktop.innerHTML;
            accordion.addEventListener('click', (e) => {
                if(e.target.tagName === 'SUMMARY') {
                     const icon = accordion.querySelector('.material-symbols-outlined');
                     icon.classList.toggle('rotate-180');
                     accordion.hasAttribute('open') ? accordion.removeAttribute('open') : accordion.setAttribute('open', '');
                }
            });
            // Form validation and state management
            const requiredFields = Array.from(form.querySelectorAll('[required]'));
            const actualPiecesInput = document.getElementById('actual-pieces');
            function validateForm() {
                const isFormValid = requiredFields.every(field => field.value.trim() !== '');
                const isPiecesValid = parseInt(actualPiecesInput.value) >= 0;
                let subBundleTotal = 0;
                let subBundlePiecesMatch = true;
                if (splitCheckbox.checked) {
                    const subBundlePieces = document.querySelectorAll('.sub-bundle-pieces');
                    subBundlePieces.forEach(input => {
                        subBundleTotal += parseInt(input.value) || 0;
                    });
                    subBundlePiecesMatch = subBundleTotal === (parseInt(actualPiecesInput.value) || 0);
                    document.getElementById('sub-bundle-total').textContent = subBundleTotal;
                    const subBundleError = document.getElementById('sub-bundle-error');
                    subBundleError.classList.toggle('hidden', subBundlePiecesMatch);
                    if (!subBundlePiecesMatch) {
                        subBundleError.textContent = `Sub-bundle total (${subBundleTotal}) must equal Actual Pieces (${actualPiecesInput.value || 0}) to save.`;
                    }
                }
                const allValid = isFormValid && isPiecesValid && subBundlePiecesMatch;
                saveBtn.disabled = !allValid;
                saveBtnMobile.disabled = !allValid;
            }
            form.addEventListener('input', () => {
                document.body.classList.add('form-dirty');
                validateForm();
            });
            form.addEventListener('reset', () => {
                document.body.classList.remove('form-dirty');
                subBundlesSection.classList.add('hidden');
                splitCheckbox.checked = false;
                setTimeout(validateForm, 0);
            });
            actualPiecesInput.addEventListener('input', () => {
                const value = parseInt(actualPiecesInput.value);
                const errorEl = document.getElementById('actual-pieces-error');
                if (value < 0) {
                    errorEl.classList.remove('hidden');
                } else {
                    errorEl.classList.add('hidden');
                }
            });
            // Sub-bundles logic
            splitCheckbox.addEventListener('change', function() {
                subBundlesSection.classList.toggle('hidden', !this.checked);
                if (this.checked) {
                    generateSubBundles();
                }
                validateForm();
            });
            document.querySelector('#sub-bundles-section button').addEventListener('click', generateSubBundles);
            document.getElementById('num-sub-bundles').addEventListener('change', generateSubBundles);
            function generateSubBundles() {
                const numBundles = parseInt(document.getElementById('num-sub-bundles').value) || 1;
                const totalPieces = parseInt(document.getElementById('actual-pieces').value) || 0;
                const basePieces = Math.floor(totalPieces / numBundles);
                let remainder = totalPieces % numBundles;
                const tableBody = document.getElementById('sub-bundle-rows');
                tableBody.innerHTML = '';
                const lotId = document.getElementById('lot-id').value || 'L-XXXXX-X';
                const parentSize = document.getElementById('size').value;
                for (let i = 1; i <= numBundles; i++) {
                    const pieces = basePieces + (remainder > 0 ? 1 : 0);
                    if (remainder > 0) remainder--;
                    const row = `
                        <tr>
                            <td class="p-3 text-sm text-text-light dark:text-text-dark font-mono">${lotId}-${i}</td>
                            <td class="p-3">
                                <select class="w-full bg-background-light dark:bg-surface-dark border-border-light dark:border-border-dark rounded-lg p-2 text-sm focus:ring-primary focus:border-primary">
                                    <option ${parentSize === 'XS' ? 'selected' : ''}>XS</option>
                                    <option ${parentSize === 'S' ? 'selected' : ''}>S</option>
                                    <option ${parentSize === 'M' ? 'selected' : ''}>M</option>
                                    <option ${parentSize === 'L' ? 'selected' : ''}>L</option>
                                    <option ${parentSize === 'XL' ? 'selected' : ''}>XL</option>
                                    <option ${parentSize === 'XXL' ? 'selected' : ''}>XXL</option>
                                </select>
                            </td>
                            <td class="p-3">
                                <input class="w-full bg-background-light dark:bg-surface-dark border-border-light dark:border-border-dark rounded-lg p-2 text-sm focus:ring-primary focus:border-primary sub-bundle-pieces" type="number" value="${pieces}" min="0"/>
                            </td>
                        </tr>
                    `;
                    tableBody.insertAdjacentHTML('beforeend', row);
                }
                validateForm();
            }
            // Toast notifications
            const toastContainer = document.getElementById('toast-container');
            function showToast(message, type = 'success') {
                const icon = type === 'success' ?
                    `<div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-green-500 bg-green-100 rounded-lg dark:bg-green-800 dark:text-green-200">
                        <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z"></path></svg>
                     </div>` :
                    `<div class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-blue-500 bg-blue-100 rounded-lg dark:bg-blue-800 dark:text-blue-200">
                        <span class="material-symbols-outlined text-lg">print</span>
                     </div>`;
                const toast = document.createElement('div');
                toast.className = 'flex items-center w-full max-w-xs p-4 mb-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800 toast';
                toast.innerHTML = `${icon}<div class="ml-3 text-sm font-normal">${message}</div>`;
                toastContainer.appendChild(toast);
                setTimeout(() => {
                    toast.remove();
                }, 3000);
            }
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                showToast('Batch saved successfully.', 'success');
                form.reset();
            });
            printBtn.addEventListener('click', function() {
                showToast('Labels sent to printer.', 'print');
            });
        });
        // Drawer logic
        const drawer = document.getElementById('batch-drawer');
        const drawerOverlay = document.getElementById('drawer-overlay');
        const drawerContent = document.getElementById('drawer-content');
        function openDrawer(row) {
            const cells = row.querySelectorAll('td');
            const data = {
                'Batch ID': cells[0].textContent,
                'Lot ID': cells[1].textContent,
                'Size': cells[2].textContent,
                'Target Yield': cells[3].textContent,
                'Actual Pieces': cells[4].textContent,
                'Operator': cells[5].textContent,
                'Timestamp': cells[6].textContent
            };
            drawerContent.innerHTML = '';
            for (const [key, value] of Object.entries(data)) {
                 drawerContent.innerHTML += `
                    <div>
                        <p class="text-sm text-subtle-light dark:text-subtle-dark">${key}</p>
                        <p class="font-semibold text-text-light dark:text-text-dark ${key.includes('ID') ? 'font-mono' : ''}">${value}</p>
                    </div>
                `;
            }
            drawer.classList.add('open');
            drawerOverlay.classList.remove('hidden');
        };
        function closeDrawer() {
            drawer.classList.remove('open');
            drawerOverlay.classList.add('hidden');
        };
    </script>

</body></html>